"use strict";(self.webpackChunkxxtouch_lite=self.webpackChunkxxtouch_lite||[]).push([[1788],{1527:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/Make_Notes_Final-de7b9b93ff87a672a609c7249b2801e8.gif"},1753:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/Web_Access.005-da1264d909495bf1ccc942b25b904b04.png"},5504:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/Web_Access.004-f4930c72dcbd091869a8d3f3aa343b19.png"},5750:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/Make_Notes-595246606dc0808a0e3907ddc520a18c.gif"},7727:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/Web_Access.003-a439f44a60ce89434b6a680ac2d9d3f1.png"},7772:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"tutorial/make-some-notes","title":"Make Some Notes","description":"Now we are ready to start developing scripts. You can use the web interface to create and edit scripts, as well as test them in real-time.","source":"@site/docs/tutorial/make-some-notes.md","sourceDirName":"tutorial","slug":"/tutorial/make-some-notes","permalink":"/docs/tutorial/make-some-notes","draft":false,"unlisted":false,"editUrl":"https://github.com/OwnGoalStudio/XXTouchElite/tree/main/docs/tutorial/make-some-notes.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Ready to Develop","permalink":"/docs/tutorial/ready-to-develop"},"next":{"title":"Share Your Scripts","permalink":"/docs/tutorial/share-your-scripts"}}');var s=t(4848),i=t(8453);const a={sidebar_position:5},r="Make Some Notes",c={},l=[{value:"Create a New Script",id:"create-a-new-script",level:2},{value:"Open \u201cNotes\u201d",id:"open-notes",level:2},{value:"Find \u201cNew Note\u201d Button",id:"find-new-note-button",level:2},{value:"Enter \u201cHello, World!\u201d",id:"enter-hello-world",level:2},{value:"Tap \u201cDone\u201d",id:"tap-done",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"make-some-notes",children:"Make Some Notes"})}),"\n",(0,s.jsx)(n.p,{children:"Now we are ready to start developing scripts. You can use the web interface to create and edit scripts, as well as test them in real-time."}),"\n",(0,s.jsxs)(n.p,{children:["In this tutorial, we will create a simple script that opens \u201cNotes\u201d on your device, creates a new note, and writes the most famous sentence in the developer community: ",(0,s.jsx)(n.code,{children:"Hello, World!"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"create-a-new-script",children:"Create a New Script"}),"\n",(0,s.jsxs)(n.p,{children:["Let\u2019s start by creating a new script. Click on the \u201cNew Script\u201d button on the top-right corner of the page. Enter a name for your script, e.g. ",(0,s.jsx)(n.code,{children:"my-awesome-script.lua"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Web_Access.003",src:t(7727).A+"",width:"1137",height:"848"})}),"\n",(0,s.jsx)(n.h2,{id:"open-notes",children:"Open \u201cNotes\u201d"}),"\n",(0,s.jsxs)(n.p,{children:["The first thing we need to do is to open the \u201cNotes\u201d app. To do this, we will use the ",(0,s.jsx)(n.a,{href:"/docs/lua-manual/app#run-the-app-apprun",children:(0,s.jsx)(n.code,{children:"app.run"})})," function. The ",(0,s.jsx)(n.a,{href:"/docs/lua-manual/app#run-the-app-apprun",children:(0,s.jsx)(n.code,{children:"app.run"})})," function takes a string as an argument, which is the bundle identifier of the app we want to open. In our case, we want to open the \u201cNotes\u201d app, so we will use the string ",(0,s.jsx)(n.code,{children:'"com.apple.mobilenotes"'}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'nLog("Open Notes...")\napp.run("com.apple.mobilenotes")\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Note that the ",(0,s.jsx)(n.a,{href:"/docs/appendix/logging-facilities#nlog",children:(0,s.jsx)(n.code,{children:"nLog"})})," function is used to log messages to the console. This is useful for debugging and testing your scripts."]}),"\n",(0,s.jsx)(n.p,{children:"Click \u201cPlay\u201d button at the bottom-right corner of the page to run the script. You should see the \u201cNotes\u201d app open on your device."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Web_Access.004",src:t(5504).A+"",width:"2274",height:"1696"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Find the bundle identifier of an app from \u201cMore\u201d \u2192 \u201cApplication List\u201d in \u201cX.X.T.E.\u201d app."})}),"\n",(0,s.jsx)(n.h2,{id:"find-new-note-button",children:"Find \u201cNew Note\u201d Button"}),"\n",(0,s.jsxs)(n.p,{children:["Now that we have opened the \u201cNotes\u201d app, we need to find the \u201cNew Note\u201d button. To do this, we will use the ",(0,s.jsx)(n.a,{href:"/docs/lua-manual/screen#-multi-point-similarity-mode-color-finding-screenfind_color",children:(0,s.jsx)(n.code,{children:"screen.find_color"})})," function. The ",(0,s.jsx)(n.a,{href:"/docs/lua-manual/screen#-multi-point-similarity-mode-color-finding-screenfind_color",children:(0,s.jsx)(n.code,{children:"screen.find_color"})})," function takes a color table as an argument, which is the collection of the color samples we want to find."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Make_Notes",src:t(5750).A+"",width:"720",height:"405"})}),"\n",(0,s.jsx)(n.p,{children:"Open \u201cColor Picker\u201d in the sidebar, locate the \u201cNew Note\u201d button, and click on it. This will add the color sample to the color table. You have to add more color samples to increase the possibility of finding the button."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Web_Access.005",src:t(1753).A+"",width:"1140",height:"844"})}),"\n",(0,s.jsxs)(n.p,{children:["Copy generated code from ",(0,s.jsx)(n.code,{children:"find_color"})," function and paste it into your script:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'local x, y\nwhile x == nil do\n    nLog("Find \u201cNew Note\u201d button\u2026")\n    sys.sleep(1)\n    -- Generated code\n    x, y = screen.find_color({\n        {1056,2341,0xe4af0a},\n        {1057,2388,0xe4af0a},\n        {1105,2389,0xe4af0a},\n        {1079,2366,0xe4af0a},\n        {1106,2339,0xe4af0a},\n        {1113,2332,0xe4af0a},\n    },95,0,0,0,0)\nend\n\nnLog("Tap \u201cNew Note\u201d\u2026")\ntouch.tap(x, y)\nsys.sleep(2)\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Here we\u2019ve added 6 color samples to the color table. Use ",(0,s.jsx)(n.code,{children:"while ... do"})," loop to keep searching for the button until it is found. The ",(0,s.jsx)(n.a,{href:"/docs/lua-manual/sys#-second-level-delay-syssleep",children:(0,s.jsx)(n.code,{children:"sys.sleep(1)"})})," function is used to pause the script for 1 second before searching again."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"/docs/lua-manual/screen#-multi-point-similarity-mode-color-finding-screenfind_color",children:(0,s.jsx)(n.code,{children:"screen.find_color"})})," function returns the coordinates of the button if it is found, or ",(0,s.jsx)(n.code,{children:"nil"})," if it is not found. We will use these coordinates with ",(0,s.jsx)(n.a,{href:"/docs/lua-manual/touch#simulate-a-single-tap-on-the-screen-touchtap",children:(0,s.jsx)(n.code,{children:"touch.tap"})})," to click on the button."]}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsx)(n.p,{children:"Making color samples is not an easy task. Here are some practical tips:"}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Select different colors"}),". Different colors make the search more unique."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Avoid graph edges"}),". Due to the anti-aliasing effect, the colors on the edges vary a lot."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Stay spread out"}),". The sampled points should be spread out to cover more space in the area that you want to locate."]}),"\n"]})]}),"\n",(0,s.jsx)(n.h2,{id:"enter-hello-world",children:"Enter \u201cHello, World!\u201d"}),"\n",(0,s.jsxs)(n.p,{children:["Sending text to the \u201cNotes\u201d app is the most straightforward part. We can use the ",(0,s.jsx)(n.a,{href:"/docs/lua-manual/key#simulate-typing-text-keysend_text",children:(0,s.jsx)(n.code,{children:"key.send_text"})})," function to send text to the app. The ",(0,s.jsx)(n.a,{href:"/docs/lua-manual/key#simulate-typing-text-keysend_text",children:(0,s.jsx)(n.code,{children:"key.send_text"})})," function takes a string as an argument, which is the text we want to send."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'nLog("Enter text\u2026")\nkey.send_text("Hello, world!")\n'})}),"\n",(0,s.jsx)(n.p,{children:"Click \u201cPlay\u201d button at the bottom-right corner of the page to run the script."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Make_Notes_Final",src:t(1527).A+"",width:"720",height:"405"})}),"\n",(0,s.jsx)(n.h2,{id:"tap-done",children:"Tap \u201cDone\u201d"}),"\n",(0,s.jsxs)(n.p,{children:["Finally, we need to tap the \u201cDone\u201d button to save the note. We can use the ",(0,s.jsx)(n.a,{href:"/docs/lua-manual/screen#-screen-optical-character-recognition-screenocr_text",children:(0,s.jsx)(n.code,{children:"screen.ocr_text"})})," function to find the \u201cDone\u201d button and then use ",(0,s.jsx)(n.a,{href:"/docs/lua-manual/touch#simulate-a-single-tap-on-the-screen-touchtap",children:(0,s.jsx)(n.code,{children:"touch.tap"})})," to click on it. This part is a bit tricky because texts are easily affected by the font and size, so we need to use OCR (Optical Character Recognition) to find it."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Here is our final script:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:'nLog("Open \u201cNotes\u201d\u2026")\napp.run("com.apple.mobilenotes")\n\nlocal x, y\nwhile x == nil do\n    nLog("Find \u201cNew Note\u201d button\u2026")\n    sys.sleep(1)\n    x, y = screen.find_color({\n        {1056,2341,0xe4af0a},\n        {1057,2388,0xe4af0a},\n        {1105,2389,0xe4af0a},\n        {1079,2366,0xe4af0a},\n        {1106,2339,0xe4af0a},\n        {1113,2332,0xe4af0a},\n    },95,0,0,0,0)\nend\n\nnLog("Tap \u201cNew Note\u201d\u2026")\ntouch.tap(x, y)\n\nnLog("Enter text\u2026")\nsys.sleep(2)\nkey.send_text("Hello, world!")\n\nlocal function tapWord(word)\n  local txts, details = screen.ocr_text {}\n  local tapped = false\n  for i, v in ipairs(txts) do\n    if v == word then\n      touch.tap(details[i].center[1], details[i].center[2])\n      tapped = true\n    end\n  end\n  return tapped\nend\n\nnLog("Tap \u201cDone\u201d\u2026")\nwhile not tapWord("Done") do\n    sys.sleep(1)\nend\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var o=t(6540);const s={},i=o.createContext(s);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);