"use strict";(self.webpackChunkxxtouch_lite=self.webpackChunkxxtouch_lite||[]).push([[6373],{6725:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"lua-manual/ftp","title":"FTP Module","description":"FTP Module - ftp","source":"@site/docs/lua-manual/ftp.md","sourceDirName":"lua-manual","slug":"/lua-manual/ftp","permalink":"/docs/lua-manual/ftp","draft":false,"unlisted":false,"editUrl":"https://github.com/OwnGoalStudio/XXTouchElite/tree/main/docs/lua-manual/ftp.md","tags":[],"version":"current","sidebarPosition":16,"frontMatter":{"sidebar_position":16},"sidebar":"luaManualSidebar","previous":{"title":"HTTP Module","permalink":"/docs/lua-manual/http"},"next":{"title":"File Operation Module","permalink":"/docs/lua-manual/file"}}');var i=l(4848),o=l(8453);const r={sidebar_position:16},t="FTP Module",a={},d=[{value:"FTP Module - ftp",id:"ftp-module---ftp",level:2},{value:"\ud83d\udea5 FTP File Download (<strong>ftp.download</strong>)",id:"-ftp-file-download-ftpdownload",level:3},{value:"Declaration",id:"declaration",level:4},{value:"Parameters and Return Values",id:"parameters-and-return-values",level:4},{value:"Example 1",id:"example-1",level:4},{value:"Example 2",id:"example-2",level:4},{value:"\ud83d\udea5 FTP File Upload (<strong>ftp.upload</strong>)",id:"-ftp-file-upload-ftpupload",level:3},{value:"Declaration",id:"declaration-1",level:4},{value:"Parameters and Return Values",id:"parameters-and-return-values-1",level:4},{value:"Example 1",id:"example-1-1",level:4},{value:"Example 2",id:"example-2-1",level:4}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"ftp-module",children:"FTP Module"})}),"\n",(0,i.jsx)(n.h2,{id:"ftp-module---ftp",children:"FTP Module - ftp"}),"\n",(0,i.jsxs)(n.p,{children:["This module will automatically process the URL using ",(0,i.jsx)(n.a,{href:"/docs/lua-manual/exstring#-url-encoding-stringencode_uristringencode_uri_component",children:(0,i.jsx)(n.code,{children:"string.encode_uri"})})," by default."]}),"\n",(0,i.jsxs)(n.p,{children:["The conventional URL format for the FTP protocol is ",(0,i.jsx)(n.code,{children:"ftp://[username[:password]@]server_address[:server_port][/path]"}),".\nIf the username or password contains the characters ",(0,i.jsx)(n.code,{children:"@"}),", ",(0,i.jsx)(n.code,{children:":"}),", or ",(0,i.jsx)(n.code,{children:"/"}),", they can be replaced with ",(0,i.jsx)(n.code,{children:"%40"}),", ",(0,i.jsx)(n.code,{children:"%3A"}),", and ",(0,i.jsx)(n.code,{children:"%2F"}),", respectively. For other characters that are not allowed in URLs, you can use ",(0,i.jsx)(n.a,{href:"/docs/lua-manual/exstring#-url-encoding-stringencode_uristringencode_uri_component",children:(0,i.jsx)(n.code,{children:"string.encode_uri_component"})})," for encoding."]}),"\n",(0,i.jsxs)(n.p,{children:["Functions marked with \ud83d\udea5 will ",(0,i.jsx)(n.strong,{children:"yield"})," in the ",(0,i.jsx)(n.a,{href:"/docs/lua-manual/thread",children:(0,i.jsx)(n.strong,{children:"Thread Module"})}),". Before these function calls return, other ",(0,i.jsx)(n.strong,{children:"threads"})," may get a chance to run."]}),"\n",(0,i.jsxs)(n.h3,{id:"-ftp-file-download-ftpdownload",children:["\ud83d\udea5 FTP File Download (",(0,i.jsx)(n.strong,{children:"ftp.download"}),")"]}),"\n",(0,i.jsx)(n.h4,{id:"declaration",children:"Declaration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"success, download_info = ftp.download(URL, local_file_path[, timeout_seconds, resume_mode, chunk_callback, buffer_size])\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-and-return-values",children:"Parameters and Return Values"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["URL","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"string"}),", the remote file address, with the account and password included in this parameter"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Local File Path ",(0,i.jsx)(n.em,{children:"string"})]}),"\n",(0,i.jsxs)(n.li,{children:["Timeout Seconds","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"number"}),", ",(0,i.jsx)(n.em,{children:"optional"}),", in seconds, default is ",(0,i.jsx)(n.code,{children:"10"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Resume Mode","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"boolean"}),", ",(0,i.jsx)(n.em,{children:"optional"}),", default is ",(0,i.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Chunk Callback ",(0,i.jsx)(n.em,{children:"function"}),", ",(0,i.jsx)(n.em,{children:"optional"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["This function is called after each data chunk is downloaded, default is ",(0,i.jsx)(n.strong,{children:"empty function"})]}),"\n",(0,i.jsxs)(n.li,{children:["The first parameter passed to the ",(0,i.jsx)(n.strong,{children:"chunk callback"})," is the current download information. If the callback function returns ",(0,i.jsx)(n.code,{children:"true"}),", the download will be interrupted."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Buffer Size","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"integer"}),", ",(0,i.jsx)(n.em,{children:"optional"}),", buffer size in bytes, default is ",(0,i.jsx)(n.strong,{children:"automatic"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Success ",(0,i.jsx)(n.em,{children:"boolean"})]}),"\n",(0,i.jsxs)(n.li,{children:["Download Info","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"table"})," or ",(0,i.jsx)(n.em,{children:"string"}),", returns detailed download information if the connection is successful, or the reason for failure otherwise"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",metastring:'title="Download Info Table Structure"',children:"{\n  resource_size = total bytes of the remote resource,\n  start_pos = starting position of this download in the resource,\n  size_download = bytes downloaded in this session,\n  speed_download = download speed in bytes/second,\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"example-1",children:"Example 1"}),"\n",(0,i.jsxs)(n.p,{children:["Given the FTP account ",(0,i.jsx)(n.code,{children:"havonz"})," and password ",(0,i.jsx)(n.code,{children:"11@@22"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",metastring:'title="ftp.download"',children:'local done, info = ftp.download("ftp://havonz:11%40%4022@192.168.31.13/1.zip", "/var/mobile/1.zip")\nif done then\n  sys.alert("If nothing went wrong, the download is complete")\nelse\n  sys.alert("Connection failed: "..info)\nend\n'})}),"\n",(0,i.jsx)(n.h4,{id:"example-2",children:"Example 2"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",metastring:'title="ftp.download"',children:'local done, info = ftp.download("ftp://havonz:123456@192.168.31.13/1.zip", "/var/mobile/1.zip", 10, true, function(binfo)\n  local percent = math.floor(((binfo.start_pos + binfo.size_download) / binfo.resource_size) * 100)\n  sys.toast("Download progress "..percent.."%")\n  return false  -- Returning true will interrupt the download\nend, 4096 * 1024)\n--\nif done then\n  if info.start_pos + info.size_download < info.resource_size then\n    sys.alert(\n      "Download interrupted\\nDownloaded "..info.size_download.." bytes"\n      .."\\nStarted from byte "..info.start_pos\n      .."\\nAverage speed "..math.floor(info.speed_download/1024).." kB/s"\n      .."\\nRemaining "..(info.resource_size - (info.start_pos + info.size_download)).." bytes"\n    )\n  else\n    sys.alert(\n      "Download complete\\nDownloaded "..info.size_download.." bytes"\n      .."\\nStarted from byte "..info.start_pos\n      .."\\nAverage speed "..math.floor(info.speed_download/1024).." kB/s"\n    )\n  end\nelse\n  sys.alert("Connection failed: "..info)\nend\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"-ftp-file-upload-ftpupload",children:["\ud83d\udea5 FTP File Upload (",(0,i.jsx)(n.strong,{children:"ftp.upload"}),")"]}),"\n",(0,i.jsx)(n.h4,{id:"declaration-1",children:"Declaration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:"success, upload_info = ftp.upload(local_file_path, URL[, timeout_seconds, resume_mode, chunk_callback, buffer_size])\n"})}),"\n",(0,i.jsx)(n.h4,{id:"parameters-and-return-values-1",children:"Parameters and Return Values"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Local File Path ",(0,i.jsx)(n.em,{children:"string"})]}),"\n",(0,i.jsxs)(n.li,{children:["URL","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"string"}),", the remote file address, with the account and password included in this parameter"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Timeout Seconds","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"number"}),", ",(0,i.jsx)(n.em,{children:"optional"}),", in seconds, default is ",(0,i.jsx)(n.code,{children:"10"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Resume Mode","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"boolean"}),", ",(0,i.jsx)(n.em,{children:"optional"}),", default is ",(0,i.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Chunk Callback ",(0,i.jsx)(n.em,{children:"function"}),", ",(0,i.jsx)(n.em,{children:"optional"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["This function is called after each data chunk is uploaded, default is ",(0,i.jsx)(n.strong,{children:"empty function"})]}),"\n",(0,i.jsxs)(n.li,{children:["The first parameter passed to the ",(0,i.jsx)(n.strong,{children:"chunk callback"})," is the current upload information. If the callback function returns ",(0,i.jsx)(n.code,{children:"true"}),", the upload will be interrupted."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Buffer Size","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"integer"}),", ",(0,i.jsx)(n.em,{children:"optional"}),", buffer size in bytes, default is ",(0,i.jsx)(n.strong,{children:"automatic"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Success ",(0,i.jsx)(n.em,{children:"boolean"})]}),"\n",(0,i.jsxs)(n.li,{children:["Upload Info","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"table"})," or ",(0,i.jsx)(n.em,{children:"string"}),", returns detailed upload information if the connection is successful, or the reason for failure otherwise"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",metastring:'title="Upload Info Table Structure"',children:"{\n  resource_size = total bytes of the local file,\n  start_pos = starting position of this upload in the local file,\n  size_upload = bytes uploaded in this session,\n  speed_upload = upload speed in bytes/second,\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"example-1-1",children:"Example 1"}),"\n",(0,i.jsxs)(n.p,{children:["Given the FTP account ",(0,i.jsx)(n.code,{children:"havonz"})," and password ",(0,i.jsx)(n.code,{children:"11@@22"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",metastring:'title="ftp.upload"',children:'local done, info = ftp.upload("/var/mobile/1.zip", "ftp://havonz:11%40%4022@192.168.31.13/1.zip")\nif done then\n  sys.alert("If nothing went wrong, the upload is complete")\nelse\n  sys.alert("Connection failed: "..info)\nend\n'})}),"\n",(0,i.jsx)(n.h4,{id:"example-2-1",children:"Example 2"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",metastring:'title="ftp.upload"',children:'local done, info = ftp.upload("/var/mobile/1.zip", "ftp://havonz:123456@192.168.31.13/1.zip", 10, true, function(binfo)\n  local percent = math.floor(((binfo.start_pos + binfo.size_upload) / binfo.resource_size) * 100)\n  sys.toast("Upload progress "..percent.."%")\n  return false  -- Returning true will interrupt the upload\nend, 4096 * 1024)\n--\nif done then\n  if info.start_pos + info.size_upload < info.resource_size then\n    sys.alert(\n      "Upload interrupted\\nUploaded "..info.size_upload.." bytes"\n      .."\\nStarted from byte "..info.start_pos\n      .."\\nAverage speed "..math.floor(info.speed_upload/1024).." kB/s"\n      .."\\nRemaining "..(info.resource_size - (info.start_pos + info.size_upload)).." bytes"\n    )\n  else\n    sys.alert(\n      "Upload complete\\nUploaded "..info.size_upload.." bytes"\n      .."\\nStarted from byte "..info.start_pos\n      .."\\nAverage speed "..math.floor(info.speed_upload/1024).." kB/s"\n    )\n  end\nelse\n  sys.alert("Connection failed: "..info)\nend\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>r,x:()=>t});var s=l(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);