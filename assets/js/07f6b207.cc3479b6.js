"use strict";(self.webpackChunkxxtouch_lite=self.webpackChunkxxtouch_lite||[]).push([[7439],{1059:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"lua-manual/thread","title":"Thread Module","description":"Thread Module - thread","source":"@site/docs/lua-manual/thread.md","sourceDirName":"lua-manual","slug":"/lua-manual/thread","permalink":"/docs/lua-manual/thread","draft":false,"unlisted":false,"editUrl":"https://github.com/OwnGoalStudio/XXTouchElite/tree/main/docs/lua-manual/thread.md","tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_position":20},"sidebar":"luaManualSidebar","previous":{"title":"Clear Module","permalink":"/docs/lua-manual/clear"},"next":{"title":"Utility Module","permalink":"/docs/lua-manual/utils"}}');var l=t(4848),s=t(8453);const r={sidebar_position:20},i="Thread Module",d={},c=[{value:"Thread Module - thread",id:"thread-module---thread",level:2},{value:"Dispatch a Task (<strong>thread.dispatch</strong>)",id:"dispatch-a-task-threaddispatch",level:3},{value:"Declaration",id:"declaration",level:4},{value:"Parameters and Return Values",id:"parameters-and-return-values",level:4},{value:"Description",id:"description",level:4},{value:"Get the Current Task ID (<strong>thread.current_id</strong>)",id:"get-the-current-task-id-threadcurrent_id",level:3},{value:"Declaration",id:"declaration-1",level:4},{value:"Parameters and Return Values",id:"parameters-and-return-values-1",level:4},{value:"Remove a Task from the Queue (<strong>thread.kill</strong>)",id:"remove-a-task-from-the-queue-threadkill",level:3},{value:"Declaration",id:"declaration-2",level:4},{value:"Parameters and Return Values",id:"parameters-and-return-values-2",level:4},{value:"Description",id:"description-1",level:4},{value:"Block and Wait for a Task to Complete (<strong>thread.wait</strong>)",id:"block-and-wait-for-a-task-to-complete-threadwait",level:3},{value:"Declaration",id:"declaration-3",level:4},{value:"Parameters and Return Values",id:"parameters-and-return-values-3",level:4},{value:"Description",id:"description-2",level:4},{value:"Register an Event Listener (<strong>thread.register_event</strong>)",id:"register-an-event-listener-threadregister_event",level:3},{value:"Declaration",id:"declaration-4",level:4},{value:"Parameters and Return Values",id:"parameters-and-return-values-4",level:4},{value:"Unregister an Event Listener (<strong>thread.unregister_event</strong>)",id:"unregister-an-event-listener-threadunregister_event",level:3},{value:"Declaration",id:"declaration-5",level:4},{value:"Parameters and Return Values",id:"parameters-and-return-values-5",level:4},{value:"Example Code",id:"example-code",level:2},{value:"Available Event Names",id:"available-event-names",level:2},{value:"Incoming and Outgoing Calls (<strong>xxtouch.callback.call</strong>)",id:"incoming-and-outgoing-calls-xxtouchcallbackcall",level:3},{value:"Declaration",id:"declaration-6",level:4},{value:"Example",id:"example",level:4},{value:"Activator Events (<strong>xxtouch.callback.activator</strong>)",id:"activator-events-xxtouchcallbackactivator",level:3},{value:"Declaration",id:"declaration-7",level:4},{value:"Description",id:"description-3",level:4},{value:"Example",id:"example-1",level:4},{value:"HID Events (<strong>xxtouch.callback.hid</strong>)",id:"hid-events-xxtouchcallbackhid",level:3},{value:"Declaration",id:"declaration-8",level:4},{value:"Example",id:"example-2",level:4}];function o(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"thread-module",children:"Thread Module"})}),"\n",(0,l.jsx)(n.h2,{id:"thread-module---thread",children:"Thread Module - thread"}),"\n",(0,l.jsxs)(n.p,{children:["The thread module uses Lua\u2019s built-in coroutine ",(0,l.jsx)(n.a,{href:"https://cloudwu.github.io/lua53doc/manual.html#2.6",children:(0,l.jsx)(n.code,{children:"coroutine"})})," for implementation, which is not the same as traditional multithreading.\nIn XXTouch\xa0Elite, the thread module is ",(0,l.jsx)(n.strong,{children:"disabled by default"}),". To enable this module, wrap the code block as follows:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'require("thread")(function ()\n  -- Code block\nend)\n'})}),"\n",(0,l.jsxs)(n.admonition,{type:"note",children:[(0,l.jsxs)(n.mdxAdmonitionTitle,{children:["Functions or modules that support ",(0,l.jsx)(n.strong,{children:"yielding"})]}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"/docs/lua-manual/sys#-second-level-delay-syssleep",children:(0,l.jsx)(n.code,{children:"sys.sleep"})})," and ",(0,l.jsx)(n.a,{href:"/docs/lua-manual/sys#-millisecond-level-delay-sysmsleep",children:(0,l.jsx)(n.code,{children:"sys.msleep"})})]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/lua-manual/touch#-millisecond-level-delay-touchmsleep",children:(0,l.jsx)(n.code,{children:"touch:msleep"})})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/lua-manual/http",children:"HTTP Module"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/lua-manual/ftp",children:"FTP Module"})}),"\n"]})]}),"\n",(0,l.jsxs)(n.h3,{id:"dispatch-a-task-threaddispatch",children:["Dispatch a Task (",(0,l.jsx)(n.strong,{children:"thread.dispatch"}),")"]}),"\n",(0,l.jsx)(n.h4,{id:"declaration",children:"Declaration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"task_id = thread.dispatch(task_function[, error_callback])\n"})}),"\n",(0,l.jsx)(n.h4,{id:"parameters-and-return-values",children:"Parameters and Return Values"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["task_function","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:"function"}),", will be added to the task queue"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["error_callback","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:"function"}),", ",(0,l.jsx)(n.em,{children:"optional"}),", if an exception occurs while executing the ",(0,l.jsx)(n.strong,{children:"task_function"}),", this function will be called instead of throwing the error. By default, errors are thrown on exceptions"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["task_id","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:"integer"}),", record this value for subsequent termination or waiting for the ",(0,l.jsx)(n.strong,{children:"task"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,l.jsxs)(n.p,{children:["Dispatch a ",(0,l.jsx)(n.strong,{children:"task"})," to the RunLoop queue. The task will start when other tasks are idle."]}),"\n",(0,l.jsxs)(n.h3,{id:"get-the-current-task-id-threadcurrent_id",children:["Get the Current Task ID (",(0,l.jsx)(n.strong,{children:"thread.current_id"}),")"]}),"\n",(0,l.jsx)(n.h4,{id:"declaration-1",children:"Declaration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"task_id = thread.current_id()\n"})}),"\n",(0,l.jsx)(n.h4,{id:"parameters-and-return-values-1",children:"Parameters and Return Values"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["task_id","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:"integer"}),", record this value for subsequent termination or waiting for the ",(0,l.jsx)(n.strong,{children:"task"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"remove-a-task-from-the-queue-threadkill",children:["Remove a Task from the Queue (",(0,l.jsx)(n.strong,{children:"thread.kill"}),")"]}),"\n",(0,l.jsx)(n.h4,{id:"declaration-2",children:"Declaration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"thread.kill(task_id)\n"})}),"\n",(0,l.jsx)(n.h4,{id:"parameters-and-return-values-2",children:"Parameters and Return Values"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["task_id","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:"integer"}),", the ",(0,l.jsx)(n.strong,{children:"task_id"})," returned when the task was previously dispatched"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"description-1",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Remove a task from the RunLoop queue, regardless of whether it has started or completed."}),"\n",(0,l.jsxs)(n.h3,{id:"block-and-wait-for-a-task-to-complete-threadwait",children:["Block and Wait for a Task to Complete (",(0,l.jsx)(n.strong,{children:"thread.wait"}),")"]}),"\n",(0,l.jsx)(n.h4,{id:"declaration-3",children:"Declaration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"thread.wait(task_id, timeout_seconds)\n"})}),"\n",(0,l.jsx)(n.h4,{id:"parameters-and-return-values-3",children:"Parameters and Return Values"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["timeout_seconds","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:"float"}),", the timeout period to wait, after which it will return. Unit: seconds"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["task_id","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:"integer"}),", the ",(0,l.jsx)(n.strong,{children:"task_id"})," returned when the task was previously dispatched"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"description-2",children:"Description"}),"\n",(0,l.jsx)(n.p,{children:"Block the current thread to wait for at least one task to complete."}),"\n",(0,l.jsxs)(n.h3,{id:"register-an-event-listener-threadregister_event",children:["Register an Event Listener (",(0,l.jsx)(n.strong,{children:"thread.register_event"}),")"]}),"\n",(0,l.jsx)(n.h4,{id:"declaration-4",children:"Declaration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"event_listener_id = thread.register_event(event_name, event_callback[, error_callback])\n"})}),"\n",(0,l.jsx)(n.h4,{id:"parameters-and-return-values-4",children:"Parameters and Return Values"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["event_name","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:"text"}),", see ",(0,l.jsx)(n.a,{href:"#available-event-names",children:"Available Event Names"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["event_callback","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:"function"}),", the callback function that will be triggered when the event occurs"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["error_callback","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:"function"}),", ",(0,l.jsx)(n.em,{children:"optional"}),", if an exception occurs while executing the ",(0,l.jsx)(n.strong,{children:"event_callback"}),", this function will be called instead of throwing the error. By default, errors are thrown on exceptions"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["event_listener_id","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:"integer"}),", record this value for subsequent unregistration of the event listener"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.h3,{id:"unregister-an-event-listener-threadunregister_event",children:["Unregister an Event Listener (",(0,l.jsx)(n.strong,{children:"thread.unregister_event"}),")"]}),"\n",(0,l.jsx)(n.h4,{id:"declaration-5",children:"Declaration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:"event_listener_id = thread.unregister_event(event_name, event_listener_id)\n"})}),"\n",(0,l.jsx)(n.h4,{id:"parameters-and-return-values-5",children:"Parameters and Return Values"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["event_name","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:"text"}),", see ",(0,l.jsx)(n.a,{href:"#available-event-names",children:"Available Event Names"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["event_listener_id","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.em,{children:"integer"}),", the ",(0,l.jsx)(n.strong,{children:"event_listener_id"})," returned when the event listener was previously registered"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"example-code",children:"Example Code"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",metastring:'title="thread.runloop"',children:'require("thread")(function ()\n  tmid = thread.dispatch(function ()  -- Dispatch an asynchronous task\n    sys.msleep(2700)\n    sys.toast("This is the 2.7th second")\n  end)\n  --\n  tid = thread.dispatch(function ()   -- Dispatch an asynchronous task\n    sys.msleep(300)\n    for i=1,10 do\n      sys.toast("Thread " .. thread.current_id() .. ": "..i)\n      sys.msleep(1000)\n    end\n    sys.toast("Should not reach here")\n  end)\n  --\n  -- iPhone 5C pinch to zoom out photo example\n  --\n  thread.dispatch(function ()         -- Dispatch a swipe task\n    touch.on(59,165)\n      :move(297,522)\n      :msleep(500)\n      :off()\n  end)\n  --\n  thread.dispatch(function ()         -- Dispatch another swipe task\n    touch.on(580,1049)\n      :move(371,1049)\n      :msleep(500)\n      :off()\n  end)\n  --\n  proc.queue_clear("message_from_afar")\n  eid = thread.register_event(        -- Register a dictionary state value event listener\n    "message_from_afar",\n    function (val)\n      sys.toast("Received message\uff1a"..val)\n    end\n  )\n  --\n  sys.msleep(300)\n  thread.wait(tmid)\n  --\n  for i=1,10 do\n    sys.toast("Thread " .. thread.current_id() .. ": "..i)\n    sys.msleep(400)\n  end\n  --\n  thread.kill(tid)  -- Kill thread 2\n  thread.unregister_event("message_from_afar", eid)  -- Unregister a dictionary state value event\n  --\n  sys.toast("Done")\nend)\n'})}),"\n",(0,l.jsx)(n.h2,{id:"available-event-names",children:"Available Event Names"}),"\n",(0,l.jsxs)(n.p,{children:["This section lists the event names that can be used with ",(0,l.jsx)(n.a,{href:"#register-an-event-listener-threadregister_event",children:(0,l.jsx)(n.code,{children:"thread.register_event"})})," and ",(0,l.jsx)(n.a,{href:"#unregister-an-event-listener-threadunregister_event",children:(0,l.jsx)(n.code,{children:"thread.unregister_event"})}),"."]}),"\n",(0,l.jsxs)(n.h3,{id:"incoming-and-outgoing-calls-xxtouchcallbackcall",children:["Incoming and Outgoing Calls (",(0,l.jsx)(n.strong,{children:"xxtouch.callback.call"}),")"]}),"\n",(0,l.jsx)(n.h4,{id:"declaration-6",children:"Declaration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'thread.register_event("xxtouch.callback.call", function (val)\n  if val == "in" then\n    -- Incoming call\n  elseif val == "out" then\n    -- Outgoing call\n  elseif val == "disconnected" then\n    -- Call disconnected\n  end\nend)\n'})}),"\n",(0,l.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",metastring:'title="xxtouch.callback.call"',children:'require("thread")(function ()\n  --\n  -- Clear the message queue\n  proc.queue_clear("xxtouch.callback.call")\n  --\n  sys.toast("The script will start listening for incoming call events, and will stop listening after twenty seconds")\n  --\n  -- Start setting up the event listener\n  local eid = thread.register_event("xxtouch.callback.call", function(val)\n    if val == "in" then\n      sys.toast("Incoming call")\n    elseif val == "out" then\n      sys.toast("Making an outgoing call")\n    elseif val == "disconnected" then\n      sys.toast("Call disconnected")\n    end\n  end)\n  --\n  sys.sleep(20)  -- Wait for 20 seconds\n  --\n  -- Unregister the event listener, if not unregistered, the script will not end here\n  thread.unregister_event("xxtouch.callback.call", eid)\nend)\n'})}),"\n",(0,l.jsxs)(n.h3,{id:"activator-events-xxtouchcallbackactivator",children:["Activator Events (",(0,l.jsx)(n.strong,{children:"xxtouch.callback.activator"}),")"]}),"\n",(0,l.jsx)(n.h4,{id:"declaration-7",children:"Declaration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'thread.register_event("xxtouch.callback.activator", function (val)\n  local ret = json.decode(val)\n  sys.toast("mode: " .. ret.mode .. "\\n"  -- Event type\n        ..  "name: " .. ret.name .. "\\n"  -- Event name\n        ..  "time: " .. ret.time)         -- Event time\nend)\n'})}),"\n",(0,l.jsx)(n.h4,{id:"description-3",children:"Description"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Install ",(0,l.jsx)(n.a,{href:"http://cydia.saurik.com/package/libactivator/",children:"Activator"})]}),"\n",(0,l.jsx)(n.li,{children:"Log out and enter Activator from the home screen"}),"\n",(0,l.jsx)(n.li,{children:'Assign the "Script Event Callback" trigger to one or more events'}),"\n",(0,l.jsxs)(n.li,{children:["Register the ",(0,l.jsx)(n.code,{children:"xxtouch.callback.activator"})," event listener in the script"]}),"\n",(0,l.jsx)(n.li,{children:"Manually trigger the above events"}),"\n",(0,l.jsx)(n.li,{children:"Handle the event callback messages in the script"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",metastring:'title="xxtouch.callback.activator"',children:'require("thread")(function ()\n  --\n  -- Clear the message queue\n  proc.queue_clear("xxtouch.callback.activator")\n  --\n  -- Start setting up the event listener\n  local eid = thread.register_event("xxtouch.callback.activator", function(val)\n    local ret = json.decode(val)\n    if ret.event == "libactivator.statusbar.tap.double" then\n        sys.toast("Double-tap status bar callback")\n    end\n  end)\n  --\n  sys.sleep(20)  -- Wait for 20 seconds\n  --\n  -- Unregister the event listener, if not unregistered, the script will not end here\n  thread.unregister_event("xxtouch.callback.activator", eid)\nend)\n'})}),"\n",(0,l.jsxs)(n.h3,{id:"hid-events-xxtouchcallbackhid",children:["HID Events (",(0,l.jsx)(n.strong,{children:"xxtouch.callback.hid"}),")"]}),"\n",(0,l.jsx)(n.h4,{id:"declaration-8",children:"Declaration"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",children:'thread.register_event("xxtouch.callback.hid", function (val)\n  local event = json.decode(val)\n  if event.event_type == "touch" then\n    if event.event_name == "touch.on" then\n      sys.toast("Touch contact position: (" .. event.x .. ", " .. event.y .. ")\\n" .. event.time)\n    elseif event.event_name == "touch.move" then\n      sys.toast("Touch moved to position: (" .. event.x .. ", " .. event.y .. ")\\n" .. event.time)\n    elseif event.event_name == "touch.off" then\n      sys.toast("Touch left position: (" .. event.x .. ", " .. event.y .. ") screen\\n" .. event.time)\n    end\n  else\n    if event.event_name == "key.down" then\n      sys.toast("Key pressed: " .. event.key_name .. "\\n" .. event.time)\n    elseif event.event_name == "key.up" then\n      sys.toast("Key released: " .. event.key_name .. "\\n" .. event.time)\n    end\n  end\nend)\n'})}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsxs)(n.p,{children:["The coordinates in this event use the ",(0,l.jsx)(n.strong,{children:"portrait mode with HOME at the bottom"})," as the initial coordinate system.\nYou can use ",(0,l.jsx)(n.a,{href:"/docs/lua-manual/screen#coordinate-rotation-conversion-screenrotate_xy",children:(0,l.jsx)(n.code,{children:"screen.rotate_xy"})})," for conversion."]})}),"\n",(0,l.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-lua",metastring:'title="xxtouch.callback.hid"',children:'require("thread")(function ()\n  --\n  -- Clear the message queue\n  proc.queue_clear("xxtouch.callback.hid")\n  --\n  -- Set up the event listener\n  local eid = thread.register_event("xxtouch.callback.hid", function (val)\n    local event = json.decode(val)\n    if event.event_type == "touch" then\n      if event.event_name == "touch.on" then\n        sys.toast("Touch contact position: (" .. event.x .. ", " .. event.y .. ")\\n" .. event.time)\n      elseif event.event_name == "touch.move" then\n        sys.toast("Touch moved to position: (" .. event.x .. ", " .. event.y .. ")\\n" .. event.time)\n      elseif event.event_name == "touch.off" then\n        sys.toast("Touch left position: (" .. event.x .. ", " .. event.y .. ") screen\\n"..event.time)\n      end\n    else\n      if event.event_name == "key.down" then\n        sys.toast("Key pressed: " .. event.key_name .. "\\n" .. event.time)\n      elseif event.event_name == "key.up" then\n        sys.toast("Key released: " .. event.key_name .. "\\n" .. event.time)\n      end\n    end\n  end)\n  --\n  touch.on(100, 100):off()\n  sys.msleep(1000)\n  key.press(\'HOMEBUTTON\')\n  --\n  sys.sleep(20)  -- Wait for 20 seconds\n  --\n  -- Unregister the event listener, if not unregistered, the script will not end here\n  thread.unregister_event("xxtouch.callback.hid", eid)\nend)\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var a=t(6540);const l={},s=a.createContext(l);function r(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);