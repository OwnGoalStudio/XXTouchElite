"use strict";(self.webpackChunkxxtouch_lite=self.webpackChunkxxtouch_lite||[]).push([[2108],{2470:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"lua-manual/intro","title":"Intro","description":"How to Read This Manual","source":"@site/docs/lua-manual/intro.md","sourceDirName":"lua-manual","slug":"/lua-manual/intro","permalink":"/docs/lua-manual/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/OwnGoalStudio/XXTouchElite/tree/main/docs/lua-manual/intro.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0},"sidebar":"luaManualSidebar","next":{"title":"System Module","permalink":"/docs/lua-manual/sys"}}');var s=t(4848),r=t(8453);const i={sidebar_position:0},o="Intro",l={},c=[{value:"How to Read This Manual",id:"how-to-read-this-manual",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"intro",children:"Intro"})}),"\n",(0,s.jsx)(n.h2,{id:"how-to-read-this-manual",children:"How to Read This Manual"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Reference ",(0,s.jsx)(n.a,{href:"https://cloudwu.github.io/lua53doc/manual.html",children:"Lua 5.3 Reference Manual"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Optional parameters in parameter descriptions are enclosed in square brackets."}),"\n",(0,s.jsx)(n.li,{children:"Parameters or return values that are fixed structured table values are represented using curly braces."}),"\n",(0,s.jsxs)(n.li,{children:["In type descriptions, both ",(0,s.jsx)(n.em,{children:"text"})," and ",(0,s.jsx)(n.em,{children:"string"})," are Lua's ",(0,s.jsx)(n.code,{children:"string"})," type, but ",(0,s.jsx)(n.em,{children:"text"})," generally refers to UTF-8 encoded, printable plain text."]}),"\n",(0,s.jsxs)(n.li,{children:["In type descriptions, ",(0,s.jsx)(n.em,{children:"sequential table"})," or ",(0,s.jsx)(n.em,{children:"list"})," refers to arrays in the conventional sense, and ",(0,s.jsx)(n.em,{children:"associative table"})," refers to dictionaries in the conventional sense. Both belong to ",(0,s.jsx)(n.em,{children:"table"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Unless otherwise specified, example code in this manual does not handle edge cases and should not be directly copied to your scripts."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(6540);const s={},r=a.createContext(s);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);